# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト48(台数削減優先)
#-----------------------------------------------------------------
# 指定のないものは距離は1000、時間は1、荷作業時間は1(充電スポットは0)、配送時間枠は2000/1/1 9:00:00～2000/1/1 17:00:00で固定
# *但し拠点と最終訪問先の配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00

test_args=[
	# ■異常系
	# 1. 車両数 : 1(台数削減優先度 3)、配送先数 : 1、台数削減モードとした場合に
	# "vehicle remove priority (aka rmpriority) must be 0 or 1 or 2"のエラーメッセージを出力して終了することを確認
	('48_1_1', '48_1_1_request.json','2x2_cost.json', True),

	# ■正常系
	# 2. 車両数 : 2(台数削減優先度 1、2)、配送先数 : 2、初期解 0→1→0および0→2→0、台数固定モードとした場合に
	# 初期解のままとなることを確認(台数固定の場合は台数削減優先度は無視)
	('48_1_2', '48_1_2_request.json','3x3_cost.json', True),

	# 3. 車両数 : 2(台数削減優先度 0、2)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→2→1→0(1台目)となることを確認
	('48_1_3', '48_1_3_request.json','3x3_cost.json', True),

	# 4. 車両数 : 2(台数削減優先度 1、2)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→2→1→0(1台目)となることを確認
	('48_1_4', '48_1_4_request.json','3x3_cost.json', True),

	# 5. 車両数 : 2(台数削減優先度 0、1)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→2→1→0(1台目)となることを確認
	('48_1_5', '48_1_5_request.json','3x3_cost.json', True),

	# 6. 車両数 : 2(台数削減優先度 2、2)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→1→2→0(2台目)となることを確認
	('48_1_6', '48_1_6_request.json','3x3_cost.json', True),

	# 7. 車両数 : 2(台数削減優先度 1、1)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→1→2→0(2台目)となることを確認
	('48_1_7', '48_1_7_request.json','3x3_cost.json', True),

	# 8. 車両数 : 2(台数削減優先度 0、0)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 初期解のままとなることを確認
	('48_1_8', '48_1_8_request.json','3x3_cost.json', True),

	# 9. 車両数 : 2(台数削減優先度 0、1、訪問数上限 1、0)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 初期解のままとなることを確認
	('48_1_9', '48_1_9_request.json','3x3_cost.json', True),

	# 10. 車両数 : 2(台数削減優先度 0、1、訪問数上限 2、0)、配送先数 : 2(移動距離 2→3は100)、初期解 0→1→2→0および0→3→0、台数削減モードとした場合に
	# 0→1→0および0→2→3→0となることを確認
	('48_1_10', '48_1_10_request.json','4x4_cost_48_1_10.json', True),

	# 11. 車両数 : 2(台数削減優先度 1、2、訪問数上限 1、0)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 0→1→2→0(2台目)となることを確認
	('48_1_11', '48_1_11_request.json','3x3_cost.json', True),

	# 12. 車両数 : 2(台数削減優先度 0、2、訪問数上限 1、0)、配送先数 : 2、初期解 0→1→0および0→2→0、台数削減モードとした場合に
	# 初期解のままとなることを確認
	('48_1_12', '48_1_12_request.json','3x3_cost.json', True),

	# 13. 車両数 : 2(台数削減優先度 0、2、訪問数上限 2、0)、配送先数 : 2(移動距離 2→3は100)、初期解 0→1→2→0および0→3→0、台数削減モードとした場合に
	# 0→1→0および0→2→3→0となることを確認
	('48_1_13', '48_1_13_request.json','4x4_cost_48_1_13.json', True),

	# 14. 車両数 : 3(台数削減優先度 0、1、2)、配送先数 : 3、初期解 0→1→0および0→2→0および0→3→0、台数削減モードとした場合に
	# 0→2→3→1→0(1台目)となることを確認
	('48_1_14', '48_1_14_request.json','4x4_cost.json', True),
]

