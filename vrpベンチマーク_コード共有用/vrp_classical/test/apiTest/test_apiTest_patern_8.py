# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト8(車両別営業時間枠)
#-----------------------------------------------------------------
# 指定のないものは距離は1000、時間は1で固定、荷作業時間は1、拠点の配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00で固定
#  (参考) 基準時刻：Args.starttime, 車両相対時刻：starthour,endhour, 配送先相対時刻:ready_fs,due_fs

test_args=[

    # 1. 車両数 : 3、配送先数 : 3(車両営業時間枠 : 2000/1/1 10:00:00～2000/1/1 12:00:00、2000/1/1 9:00:00～2000/1/1 13:00:00、2000/1/1 13:00:00～2000/1/1 17:00:00
    # 配送時間枠 : 2000/1/1 8:00:00～2000/1/1 11:30:00、2000/1/1 12:15:00～2000/1/1 12:30:00、2000/1/1 14:00:00～2000/1/1 16:00:00)とした場合に
    # 1台目の車両が1つ目の配送先、2台目の車両が2つ目の配送先、3台目の車両が3つ目の配送先に配送することを確認(各種時間が2000/1/1 10:00:00を基準とした相対時刻になっていることも確認)
	('8_1_1', '8_1_1_request.json','4x4_cost.json', True),

    # 2. 車両数 : 2、配送先数 : 4(車両営業時間枠 : 2000/1/1 9:00:00～2000/1/1 10:30:00、2000/1/1 9:00:00～2000/1/1 17:00:00
    # 配送時間枠 : 全て2000/1/1 9:00:00～2000/1/1 17:00:00)とした場合に
    # 1台目の車両に1つの配送先、2台目の車両に3つの配送先となることを確認
	('8_1_2', '8_1_2_request.json','5x5_cost.json', True),

    # 3. 車両数 : 2、配送先数 : 2(車両営業時間枠 : 2000/1/1 9:00:00～2000/1/1 17:00:00、2000/1/1 12:00:00～2000/1/1 12:00:00
    # 配送時間枠 : 2000/1/1 9:00:00～2000/1/1 11:00:00、2000/1/1 14:00:00～2000/1/1 17:00:00)とした場合に
    # 1台目の車両が1つ目の配送先、2台目の車両が2つ目の配送先に配送することを確認(遅刻ペナルティ>車両営業時間枠違反ペナルティ)
	('8_1_3', '8_1_3_request.json','3x3_cost.json', True),

    # 4. 車両数 : 2、配送先数 : 2(車両営業時間枠 : 2000/1/1 9:00:00～2000/1/1 17:00:00、2000/1/1 12:00:00～2000/1/1 12:00:00
    # 配送時間枠 : 2000/1/1 9:00:00～2000/1/1 11:00:00、2000/1/1 16:00:00～2000/1/1 17:00:00)とした場合に
    # 1台目の車両が2つ目の配送先、2台目の車両が1つ目の配送先に配送することを確認(遅刻ペナルティ<車両営業時間枠違反ペナルティ)
	('8_1_4', '8_1_4_request.json','3x3_cost.json', True),

    # 5. 車両数 : 2、配送先数 : 5(車両営業時間枠 : 2000/1/1 8:00:00～2000/1/1 10:05:00、2000/1/1 13:45:00～2000/1/1 17:00:00
    # 拠点の配送時間枠は2000/1/1 9:00:00～2000/1/1 18:00:00、配送時間枠 : 全て2000/1/1 9:00:00～2000/1/1 18:00:00)とした場合に
    # 1台目の車両に1つの配送先、2台目の車両に4つの配送先となることを確認
    # (拠点の受け入れ時間が9:00からなので1台目が2つの配送先に配送すると遅刻する(2台目が4つの配送先に配送しても遅刻するが、ペナルティは小さい))
	('8_1_5', '8_1_5_request.json','6x6_cost.json', True),

    # 6. 車両数 : 3、配送先数 : 3(車両営業時間枠 : 2000/1/1 10:00:00～2000/1/1 12:00:00、2000/1/1 8:00:00～2000/1/1 9:00:00、2000/1/1 13:00:00～2000/1/1 17:00:00
    # 配送時間枠 : 2000/1/1 7:00:00～2000/1/1 9:30:00、2000/1/1 11:00:00～2000/1/1 12:30:00、2000/1/1 14:00:00～2000/1/1 16:00:00)とした場合に
    # 1台目の車両が2つ目の配送先、2台目の車両が1つ目の配送先、3台目の車両が3つ目の配送先に配送することを確認(開始時刻、終了時刻ともに2000/1/1 10:00:00を基準とした相対時刻になっていることも確認)
	('8_1_6', '8_1_6_request.json','4x4_cost.json', True),

]

