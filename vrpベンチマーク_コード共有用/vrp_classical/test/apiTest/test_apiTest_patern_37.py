# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト37(コマンドライン実行)
#-----------------------------------------------------------------

test_args=[
    # ■正常系
    # 1. 車両数 : 4、配送先数 : 50、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_1', '37_1_1_request.json'),

    # 2. 車両数 : 4、配送先数 : 50、台数削減モード、初期解生成モードとした場合に期待値と一致することを確認
    # -rv
    ('37_1_2', '37_1_2_request.json'),

    # 3. 車両数 : 4、配送先数 : 50、初期解に2台追加、初期解生成モードとした場合に期待値と一致することを確認
    # -iv 2
    ('37_1_3', '37_1_3_request.json'),

    # 4. 車両数 : 4、配送先数 : 50、初期解読み込みモードとした場合に期待値と一致することを確認
    # -a
    ('37_1_4', '37_1_4_request.json'),

    # 5. 車両数 : 4、配送先数 : 50、非巡回モード、初期解生成モードとした場合に期待値と一致することを確認
    # -l
    ('37_1_5', '37_1_5_request.json'),

    # 6. 車両数 : 4、配送先数 : 50、ltime=0.5,、utime=1.5、初期解生成モードとした場合に期待値と一致することを確認
    # -ltime 0.5, -utime 1.5
    ('37_1_6', '37_1_6_request.json'),

    # 7. 車両数 : 4、配送先数 : 50、dem=100、初期解生成モードとした場合に期待値と一致することを確認
    # -dem 100
    ('37_1_7', '37_1_7_request.json'),

    # 8. 車両数 : 4、配送先数 : 50、dem2=100、初期解生成モードとした場合に期待値と一致することを確認
    # -dem2 100
    ('37_1_8', '37_1_8_request.json'),

    # 9. 車両数 : 4、配送先数 : 50、ave=20、初期解生成モードとした場合に期待値と一致することを確認
    # -ave 20
    ('37_1_9', '37_1_9_request.json'),

    # 10. 車両数 : 4、配送先数 : 50、初期解生成モード、時間で最適化とした場合に期待値と一致することを確認
    # -opt_t
    ('37_1_10', '37_1_10_request.json'),

    # 11. 車両数 : 4、配送先数 : 20、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_11', '37_1_11_request.json'),

    # 12. 車両数 : 3、配送先数 : 50、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_12', '37_1_12_request.json'),

    # 13. 車両数 : 4、配送先数 : 50(dem<0を含む)、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_13', '37_1_13_request.json'),

    # 14. 車両数 : 4、配送先数 : 50(opskill=1.0、1.1、0.8、1.0、drskill=1.0、1.2、0.9、1.0)、初期解生成モードとした場合に期待値と一致することを確認
    # -sk
    ('37_1_14', '37_1_14_request.json'),

    # 15. 車両数 : 4、配送先数 : 50、立ち寄り制限あり、初期解生成モードとした場合に期待値と一致することを確認
    # -rej
    ('37_1_15', '37_1_15_request.json'),

    # 16. 車両数 : 4、配送先数 : 50、通行不可あり、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_16', '37_1_16_request.json'),

    # 17. 車両数 : 4、配送先数 : 50(同一SPOTIDあり)、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_17', '37_1_17_request.json'),

    # 18. 車両数 : 4、配送先数 : 50(同一SPOTIDあり)、大量輸送モード、初期解生成モードとした場合に期待値と一致することを確認
    # -bs
    ('37_1_18', '37_1_18_request.json'),

    # 19. 車両数 : 4、配送先数 : 50(同一SPOTIDあり、第2積載)、大量輸送モード、初期解生成モードとした場合に期待値と一致することを確認
    # -bs
    ('37_1_19', '37_1_19_request.json'),

    # 20. 車両数 : 4、配送先数 : 50、最終訪問先指定、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_20', '37_1_20_request.json'),

    # 21. 車両数 : 4、配送先数 : 50、車両別営業時間ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -vt
    ('37_1_21', '37_1_21_request.json'),

    # 22. 車両数 : 4、配送先数 : 50、直送便、初期解生成モードとした場合に期待値と一致することを確認
    # -bs
    ('37_1_22', '37_1_22_request.json'),

    # 23. 車両数 : 4、配送先数 : 50、直送便(第2積載)、初期解生成モードとした場合に期待値と一致することを確認
    # -bs
    ('37_1_23', '37_1_23_request.json'),

    # 24. 車両数 : 4、配送先数 : 50、出発遅延、初期解生成モードとした場合に期待値と一致することを確認
    # -delayst
    ('37_1_24', '37_1_24_request.json'),

    # 25. 車両数 : 4、配送先数 : 50(訪問数上限=15, 15, 15, 15)、初期解入力モードとした場合に期待値と一致することを確認
    # -a -maxvisit
    ('37_1_25', '37_1_25_request.json'),

    # 26. 車両数 : 4、配送先数 : 50、時間別距離ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -ds -vs
    ('37_1_26', '37_1_26_request.json'),

    # 27. 車両数 : 4、配送先数 : 50、時間別時間ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -ts -vs
    ('37_1_27', '37_1_27_request.json'),

    # 28. 車両数 : 4、配送先数 : 50、時間別車両別距離ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -dsv -vs
    ('37_1_28', '37_1_28_request.json'),

    # 29. 車両数 : 4、配送先数 : 50、時間別車両別時間ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -tsv -vs
    ('37_1_29', '37_1_29_request.json'),

    # 30. 車両数 : 4、配送先数 : 50(車両タイプ指定)、初期解生成モードとした場合に期待値と一致することを確認
    # -dsv -vs
    ('37_1_30', '37_1_30_request.json'),

    # 31. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、初期解生成モードとした場合に期待値と一致することを確認
    # -vs
    ('37_1_31', '37_1_31_request.json'),

    # 32. 車両数 : 4、配送先数 : 50(ヘテロ車両指定、第2積載)、初期解生成モードとした場合に期待値と一致することを確認
    # -vs
    ('37_1_32', '37_1_32_request.json'),

    # 33. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、充電配送計画、初期解生成モードとした場合に期待値と一致することを確認
    # -vs -evplan -ev -es
    ('37_1_33', '37_1_33_request.json'),

    # 34. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、電費テーブル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -vs -evplan -ev -es -ec
    ('37_1_34', '37_1_34_request.json'),

    # 35. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、時間別電費ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -vs -evplan -ev -es -ec -ecs
    ('37_1_35', '37_1_35_request.json'),

    # 36. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、時間別車両別電費ファイル使用、初期解生成モードとした場合に期待値と一致することを確認
    # -vs -evplan -ev -es -ec -ecsv
    ('37_1_36', '37_1_36_request.json'),

    # 37. 車両数 : 4、配送先数 : 50(ヘテロ車両指定)、初期解生成モード、電力で最適化とした場合に期待値と一致することを確認
    # -vs -evplan -ev -es -ec -opt_e
    ('37_1_37', '37_1_37_request.json'),

    # 38. 車両数 : 4、配送先数 : 50、経験コストテーブル使用、初期解生成モード、経験コストで最適化とした場合に期待値と一致することを確認
    # -opt_x -x
    ('37_1_38', '37_1_38_request.json'),

    # 39. 車両数 : 4、配送先数 : 50、初期解生成モード、時間別経験コストテーブル使用、経験コストで最適化とした場合に期待値と一致することを確認
    # -opt_x -x -xs
    ('37_1_39', '37_1_39_request.json'),

    # 40. 車両数 : 4、配送先数 : 50、初期解生成モード、時間別車両別経験コストテーブル使用、経験コストで最適化とした場合に期待値と一致することを確認
    # -opt_x -x -xsv
    ('37_1_40', '37_1_40_request.json'),

    # 41. 車両数 : 4、配送先数 : 50、avetime=0.5、初期解生成モードとした場合に期待値と一致することを確認
    # -avetime 0.5
    ('37_1_41', '37_1_41_request.json'),

    # 42. 車両数 : 4、配送先数 : 50、avenper=20、初期解生成モードとした場合に期待値と一致することを確認
    # -avenper 20
    ('37_1_42', '37_1_42_request.json'),

    # 43. 車両数 : 4、配送先数 : 50、avennum=1、初期解生成モードとした場合に期待値と一致することを確認
    # -avennum 1
    ('37_1_43', '37_1_43_request.json'),

    # 44. 車両数 : 4、配送先数 : 50、回転指定とした場合に期待値と一致することを確認
    # -mt
    ('37_1_44', '37_1_44_request.json'),

    # 45. 車両数 : 4、配送先数 : 50、回転指定、車両別回転数上限ファイル使用とした場合に期待値と一致することを確認
    # -mt -mtv
    ('37_1_45', '37_1_45_request.json'),

    # 46. 車両数 : 4、配送先数 : 50、回転指定、配送先拠点作業時間ファイル使用とした場合に期待値と一致することを確認
    # -mt -mtc
    ('37_1_46', '37_1_46_request.json'),

    # 47. 車両数 : 4、配送先数 : 50(同一SPOTIDあり)、駐車時間指定、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_47', '37_1_47_request.json'),

    # 48. 車両数 : 4、配送先数 : 50、初期解生成モード、スレッド数2とした場合に期待値と一致することを確認
    # -multithread 2
    ('37_1_48', '37_1_48_request.json'),

    # 49. 車両数 : 4、配送先数 : 50、初期解生成モード、時間違反重み0とした場合に期待値と一致することを確認
    # -tpw 0
    ('37_1_49', '37_1_49_request.json'),

    # 50. 車両数 : 4、配送先数 : 50、初期解生成モード、積載量違反重み0とした場合に期待値と一致することを確認
    # -lpw 0
    ('37_1_50', '37_1_50_request.json'),

    # 51. 車両数 : 4、配送先数 : 50、初期解生成モード、第2積載量違反重み0とした場合に期待値と一致することを確認
    # -l2pw 0
    ('37_1_51', '37_1_51_request.json'),

    # 52. 車両数 : 4、配送先数 : 50、初期解生成モード、ave=20、時間ばらつき違反重み0とした場合に期待値と一致することを確認
    # -ave 20 -tlpw 0
    ('37_1_52', '37_1_52_request.json'),

    # 53. 車両数 : 4、配送先数 : 50、初期解生成モード、avenper=20、件数ばらつき違反重み0とした場合に期待値と一致することを確認
    # -avenper 20 -vlpw 0
    ('37_1_53', '37_1_53_request.json'),

    # 54. 車両数 : 4、配送先数 : 50、初期解生成モード、時間違反重みタイプ hardとした場合に期待値と一致することを確認
    # -tpt hard
    ('37_1_54', '37_1_54_request.json'),

    # 55. 車両数 : 4、配送先数 : 50、初期解生成モード、積載量違反重みタイプ hardとした場合に期待値と一致することを確認
    # -lpt hard
    ('37_1_55', '37_1_55_request.json'),

    # 56. 車両数 : 4、配送先数 : 50、初期解生成モード、第2積載量違反重みタイプ hardとした場合に期待値と一致することを確認
    # -l2pt hard
    ('37_1_56', '37_1_56_request.json'),

    # 57. 車両数 : 4、配送先数 : 50、初期解生成モード、ave=20、時間ばらつき違反重みタイプ hardとした場合に期待値と一致することを確認
    # -ave 20 -tlpt hard
    ('37_1_57', '37_1_57_request.json'),

    # 58. 車両数 : 4、配送先数 : 50、初期解生成モード、avenper=20、件数ばらつき違反重みタイプ hardとした場合に期待値と一致することを確認
    # -avenper 20 -vlpt hard
    ('37_1_58', '37_1_58_request.json'),

    # 59. 車両数 : 4、配送先数 : 50、出発遅延(最適化考慮)、初期解生成モードとした場合に期待値と一致することを確認
    # -delayst2
    ('37_1_59', '37_1_59_request.json'),

    # 60. 車両数 : 4、配送先数 : 50、出発遅延、出発遅延(最適化考慮)、初期解生成モードとした場合に期待値と一致することを確認
    # -delayst -delayst2
    ('37_1_60', '37_1_60_request.json'),

    # 61. 車両数 : 4、配送先数 : 50、追加時間枠場所指定、初期解生成モードとした場合に期待値と一致することを確認
    # -addtwspot
    ('37_1_61', '37_1_61_request.json'),

    # 62. 車両数 : 4、配送先数 : 50(同一SPOTIDあり)、到着後駐車時間指定、初期解生成モードとした場合に期待値と一致することを確認
    ('37_1_62', '37_1_62_request.json'),

    # 63. 車両数 : 4、配送先数 : 50、荷物分割、初期解生成モードとした場合に期待値と一致することを確認
    # -demdiv
    ('37_1_63', '37_1_63_request.json'),

    # 64. 車両数 : 4、配送先数 : 50、追加時間枠場所指定、初期解入力モードとした場合に期待値と一致することを確認
    # -addtwspot -a
    ('37_1_64', '37_1_64_request.json'),

    # 65. 車両数 : 4、配送先数 : 50、追加時間枠場所指定、初期解入力モード(初期解に飛び地あり)とした場合に期待値と一致することを確認
    # -addtwspot -a
    ('37_1_65', '37_1_65_request.json'),

    # 66. 車両数 : 4、配送先数 : 50、荷物分割、初期解入力モード(荷物分割)とした場合に期待値と一致することを確認
    # -a2 -demdiv
    ('37_1_66', '37_1_66_request.json'),

    # 67. 車両数 : 4、配送先数 : 50、avedistper=20、初期解生成モードとした場合に期待値と一致することを確認
    # -avedistper 20
    ('37_1_67', '37_1_67_request.json'),

    # 68. 車両数 : 4、配送先数 : 50、avedistnum=1000、初期解生成モードとした場合に期待値と一致することを確認
    # -avedistnum 1000
    ('37_1_68', '37_1_68_request.json'),

    # 69. 車両数 : 4、配送先数 : 50、初期解生成モード、avedistper=20、距離ばらつき違反重み0とした場合に期待値と一致することを確認
    # -avedistper 20 -dlpw 0
    ('37_1_69', '37_1_69_request.json'),

    # 70. 車両数 : 4、配送先数 : 50、初期解生成モード、avedistper=20、距離ばらつき違反重みタイプ hardとした場合に期待値と一致することを確認
    # -avedistper 20 -dlpt hard
    ('37_1_70', '37_1_70_request.json'),

    # 71. 車両数 : 4、配送先数 : 50、台数削減モード(優先設定あり)、初期解生成モードとした場合に期待値と一致することを確認
    # -rv
    ('37_1_71', '37_1_71_request.json'),

    # 72. 車両数 : 4、配送先数 : 50、未割当荷物あり(初期解制約なし)、初期解読み込みモードとした場合に期待値と一致することを確認
    # -a
    ('37_1_72', '37_1_72_request.json'),

    # 73. 車両数 : 4、配送先数 : 50、未割当荷物あり(初期解制約あり)、初期解読み込みモードとした場合に期待値と一致することを確認
    # -a -afix
    ('37_1_73', '37_1_73_request.json'),

    # 74. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルの読み込みとした場合に期待値と一致することを確認
    # -br break.csv
    ('37_1_74', '37_1_74_request.json'),

    # 75. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルの読み込みと、追加休憩枠場所ファイル読み込みとした場合に期待値と一致することを確認
    # -br break.csv -addbrsopt break_ad.csv
    ('37_1_75', '37_1_75_request.json'),

    # 76. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間間隔240とした場合に期待値と一致することを確認
    # -br_int 240
    ('37_1_76', '37_1_76_request.json'),

    # 77. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間30とした場合に期待値と一致することを確認
    # -br_time 30
    ('37_1_77', '37_1_77_request.json'),

    # 78. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルなし、休憩時間間隔240、休憩時間30とした場合に期待値と一致することを確認
    # -br_int 240 br_time 30
    ('37_1_78', '37_1_78_request.json'),

    # 79. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルの読み込み、休憩時間間隔0、休憩時間30とした場合に期待値と一致することを確認
    # -br break.csv -br_int 0 br_time 30
    ('37_1_79', '37_1_79_request.json'),

    # 80. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルの読み込み、休憩時間間隔240、休憩時間0とした場合に期待値と一致することを確認
    # -br break.csv -br_int 240 br_time 0
    ('37_1_80', '37_1_80_request.json'),

    # 81. 車両数 : 4、配送先数 : 50、初期解生成モード、休憩時間ファイルの読み込み、休憩時間間隔240、休憩時間30とした場合に期待値と一致することを確認
    # -br break.csv -br_int 240 br_time 30
    ('37_1_81', '37_1_81_request.json'),

    # 82. 車両数 : 5(5台目予約車両、その他は通常車両)、配送先数 : 50、未割り当て荷物最適化、未割当て禁止ファイルの読み込み、予約車両ファイルの読み込みとした場合に期待値と一致することを確認
    # -unass unass_cust.csv -reservedv reserved_v.csv -a DSS_FORMAT_02-0input_50-best0_initial_unass.csv
    ('37_1_82', '37_1_82_request.json'),

    # 83. 車両数 : 5(5台目予約車両、その他は通常車両)、配送先数 : 50、初期解生成モード、未割り当て荷物最適化、未割当て禁止ファイルの読み込み、予約車両ファイルの読み込みとした場合に期待値と一致することを確認
    # -unass unass_cust.csv -reservedv reserved_v.csv
    ('37_1_83', '37_1_83_request.json'),

    # 84. 車両数 : 5(5台目予約車両、その他は通常車両)、配送先数 : 50、未割り当て荷物最適化、未割当て禁止ファイルなし、予約車両ファイルの読み込みとした場合に期待値と一致することを確認
    # -reservedv reserved_v.csv -a DSS_FORMAT_02-0input_50-best0_initial_unass.csv
    ('37_1_84', '37_1_84_request.json'),

]
