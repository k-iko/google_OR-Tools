# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト23(正常解BackUp & 回復機能)
#-----------------------------------------------------------------
# 記載のないものは距離は1000、時間は1で固定、配送時間枠は2000/1/1 9:00:00～2000/1/1 17:00:00で固定、荷作業時間は1で固定
# *但し拠点と最終訪問先の配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00

test_args=[
    # ■正常系
    # 1. 車両数 : 2、配送先数 : 6(移動距離 1→2および4→5で10000000000、移動時間 1→5で6、
    # management_ttable: Table1参照し通行不可設定、
    # 1番目の配送先に2台目の車両、4番目の配送先に1台目の車両は立寄不可)、初期解を0→1→2→3→0および0→4→5→6→0とした場合に
    # cross処理が実行されてから初期解に戻ることを確認(初期解違反なし、車両営業時間枠違反)
	('23_1_1', '23_1_1_request.json','7x7_cost_23_1_1.json', True),

    # 2. 車両数 : 2、配送先数 : 3(移動距離 1→2で10000000000、配送時間枠 3番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00、
    # 2→1および3→2および1→3および3→1は通行不可)、初期解を0→1→2→0および0→3→0とした場合に
    # merge処理が実行されてから初期解に戻ることを確認(初期解違反なし、配送時間枠違反)
	('23_1_2', '23_1_2_request.json','4x4_cost_23_1_2.json', True),

    # 3. 車両数 : 2、配送先数 : 3(移動距離 1→2で10000000000、荷物量 149、151、150、
    # 2→1および3→2および1→3および3→1は通行不可)、初期解を0→1→2→0および0→3→0とした場合に
    # merge処理が実行されてから初期解に戻ることを確認(初期解違反なし、積載量違反)
	('23_1_3', '23_1_3_request.json','4x4_cost_23_1_3.json', True),

    # 4. 車両数 : 2、配送先数 : 3(移動距離 1→2で10000000000、移動時間 1→2で0.1、
    # 2→1および3→2および1→3および3→1は通行不可)、初期解を0→1→2→0および0→3→0、avetime_ape=0.2とした場合に
    # merge処理が実行されてから初期解に戻ることを確認(初期解違反なし、時間のAPE違反)
	('23_1_4', '23_1_4_request.json','4x4_cost_23_1_4.json', True),

    # 5. 車両数 : 2、配送先数 : 6(移動距離 1→2および4→5で10000000000、移動時間 1→5で5、
    # management_ttable: Table1参照し通行不可設定、
    # 1番目の配送先に2台目の車両、4番目の配送先に1台目の車両は立寄不可)、初期解を0→1→2→3→0および0→4→5→6→0、巡回モードとした場合に
    # cross処理が実行されてから初期解に戻ることを確認(初期解違反なし、車両営業時間枠違反、巡回モード)
	('23_1_5', '23_1_5_request.json','7x7_cost_23_1_5.json', True),

    # 6. 車両数 : 2、配送先数 : 2(配送時間枠 1番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00)、
    # management_dtable : 
    #  [{vtype : "0",start_time : 0,table : 0→1で10000000000},
    #   {vtype : "1",start_time : 0,table : 1→2で10000000000}]、
    # 初期解を0→1→0および0→2→0、台数削減モードとした場合に
    # merge処理→inswap処理が実行されてからmerge後の解(どちらかの車両が 0→1→2→0)に戻ることを確認(merge後違反なし、配送時間枠違反、台数削減モード)
	('23_1_6', '23_1_6_request.json','3x3_cost_23_1_6.json', True),

    # 7. 車両数 : 1、配送先数 : 2(移動距離 1→2で1000000000、移動時間 すべて2、配送時間枠 1番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00、drskill=0.5)、初期解生成モードとした場合に
    # inswap処理が実行されてから初期解(0→1→2→0)に戻ることを確認(初期解違反なし、配送時間枠違反、初期解生成モード)
	# ('23_1_7', '23_1_7_request.json','3x3_cost_23_1_7.json', True),
    # →実施不可のため削除 (drskill)

    # 8. 車両数 : 2、配送先数 : 3(移動距離 1→2で10000000000、配送時間枠 3番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00、
    # 2→1および3→2および1→3および3→1は通行不可、荷物量 400、100、100)、初期解を0→1→2→0および0→3→0とした場合に
    # merge処理が実行されてから初期解に戻らない(0→1→0および0→2→3→0となる)ことを確認(初期解積載量違反、配送時間枠違反、バックアップがないためリストアしない)
	('23_1_8', '23_1_8_request.json','4x4_cost_23_1_8.json', True),

    # 9. 車両数 : 2、配送先数 : 3(移動時間 1→2で10000000、荷物量 149、150.001、150、配送時間枠および車両営業時間枠はすべて1000/1/1 0:00:00～3000/1/1 0:00:00、
    # 2→1および3→2および1→3および3→1は通行不可)、初期解を0→1→2→0および0→3→0、opt_d_weight=0.0、opt_t_weight=1.0とした場合に
    # merge処理が実行されてから初期解に戻ることを確認(初期解違反なし、積載量違反、時間最適化)
	('23_1_9', '23_1_9_request.json','4x4_cost_23_1_9.json', True),

    # 10. 車両数 : 2、配送先数 : 3(移動距離 1→2で10000000000、配送時間枠 3番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00、vtype=1、1、
    # 2→1および3→2および1→3および3→1は通行不可)、初期解を0→1→2→0および0→3→0とした場合に
    # merge処理が実行されてから初期解に戻ることを確認(初期解違反なし、配送時間枠違反、車両種別が同じでもそれぞれバックアップ＆リストアされる)
	('23_1_10', '23_1_10_request.json','4x4_cost_23_1_10.json', True),

    # 11. 車両数 : 2、配送先数 : 4(移動距離 1→2で1000000000、移動時間 すべて2、配送時間枠 1番目の配送先は2000/1/1 9:00:00～2000/1/1 11:00:00、drskill=0.5、0.5、SPOTID 1、2、3、3、積載量 1、1、150、150)、初期解生成モードとした場合に
    # inswap処理が実行されてから初期解(0→3→4→0(直送便)および0→1→2→0)に戻ることを確認(初期解違反なし、配送時間枠違反、初期解生成モード、直送便)
	# ('23_1_11', '23_1_11_request.json','4x4_cost_23_1_11.json', True),
    # →実施不可のため削除 (drskill)

]

# [Table1]
# ----------------------------------------------------------
#  "management_ttable": [{
#  	"vtype": "common",
#  	"start_time": 0.0,
#  	"table": [
#  		[  0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
#  		[1.0,   0,   1,  -1,  -1, 1.0,  -1],
#  		[1.0,  -1,   0,   1,  -1,  -1,  -1],
#  		[1.0,  -1,  -1,   0,  -1,  -1,  -1],
#  		[1.0,  -1,   1,  -1,   0,   1,  -1],
#  		[1.0,  -1,  -1,  -1,  -1,   0,   1],
#  		[1.0,  -1,  -1,  -1,  -1,  -1,   0]
#  	]
#  }]
# ----------------------------------------------------------
