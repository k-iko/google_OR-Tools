# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト24(最適化指標（時間・距離の係数を自由に設定）)
#-----------------------------------------------------------------
# 記載のないものは距離は1000、時間は1で固定、配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00で固定、荷作業時間は1で固定
test_args=[
    # ■正常系
    # 1. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で999、移動時間　1→3および2→4で6)、opt_d_weight=0.8、opt_t_weight=0.2、初期解を0→1→2→0および0→3→4→0とした場合に
    # 解が変わらないことを確認(距離の改善よりも時間の悪化の方が影響が大きいため)
	('24_1_1', '24_1_1_request.json','5x5_cost_24_1_1.json', True),

    # 2. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で999、移動時間　1→3および2→4で5)、opt_d_weight=0.8、opt_t_weight=0.2、初期解を0→1→2→0および0→3→4→0とした場合に
    # 解が変わらないことを確認(距離の改善=時間の悪化となり改善されないため)
	('24_1_2', '24_1_2_request.json','5x5_cost_24_1_2.json', True),

    # 3. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で999、移動時間　1→3および2→4で4)、opt_d_weight=0.8、opt_t_weight=0.2、初期解を0→1→2→0および0→3→4→0とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(時間の悪化よりも距離の改善の方が影響が大きいため)
	('24_1_3', '24_1_3_request.json','5x5_cost_24_1_3.json', True),

    # 4. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で1005、移動時間　1→3および2→4で0)、opt_d_weight=0.2、opt_t_weight=0.8、初期解を0→1→2→0および0→3→4→0とした場合に
    # 解が変わらないことを確認(時間の改善よりも距離の悪化の方が影響が大きいため)
	('24_1_4', '24_1_4_request.json','5x5_cost_24_1_4.json', True),

    # 5. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で1004、移動時間　1→3および2→4で0)、opt_d_weight=0.2、opt_t_weight=0.8、初期解を0→1→2→0および0→3→4→0とした場合に
    # 解が変わらないことを確認(時間の改善=距離の悪化となり改善されないため)
	('24_1_5', '24_1_5_request.json','5x5_cost_24_1_5.json', True),

    # 6. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で1003、移動時間　1→3および2→4で0)、opt_d_weight=0.2、opt_t_weight=0.8、初期解を0→1→2→0および0→3→4→0とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(距離の悪化よりも時間の改善の方が影響が大きいため)
	('24_1_6', '24_1_6_request.json','5x5_cost_24_1_6.json', True),

    # 7. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で998、移動時間　2→3および1→4で0)、opt_d_weight=0.5、opt_t_weight=0.5、初期解を0→1→2→0および0→3→4→0とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(距離で改善したほうが改善量が大きいため)
	('24_1_7', '24_1_7_request.json','5x5_cost_24_1_7.json', True),

    # 8. 車両数 : 2、配送先数 : 4(移動距離　1→3および2→4で999.5、移動時間　2→3および1→4で0)、opt_d_weight=0.5、opt_t_weight=0.5、初期解を0→1→2→0および0→3→4→0とした場合に
    # 0→2→3→0および0→1→4→0となることを確認(時間で改善したほうが改善量が大きいため)
	('24_1_8', '24_1_8_request.json','5x5_cost_24_1_8.json', True),
]
