記載のないものは距離は1000、時間は1で固定、配送時間枠は2000/1/1 9:00:00～2000/1/1 17:00:00で固定、荷作業時間は1で固定
*但し拠点と最終訪問先の配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00

■異常系
1. 車両数 : 1、配送先数 : 2(1→2は通行不可)、初期解を0→1→2→0とした場合に
"failed to read initial solution due to cost of -1"のエラーメッセージを出力して終了することを確認

■正常系
2. 車両数 : 1、配送先数 : 3(移動距離　1→3で10、2→1で100　移動時間　1→3で-1(通行不可))、初期解を0→1→2→3→0とした場合に
通行可能な最適解(0→3→2→1→0)となることを確認(距離で最適化する場合でも時間テーブルで通行不可なら採用しない)

3. 車両数 : 3、配送先数 : 6(移動距離および移動時間は(*)のテーブル参照)、初期解を0→1→2→0および0→3→4→0および0→5→6→0とした場合に
通行可能な最適解(0→1→6→0および0→3→2→0および0→5→4→0)とならない(初期解のまま)ことを確認(改善途中で通行不可ルートを含む解を経由するため)

4. 車両数 : 2、配送先数 : 4(移動距離　1→4で-1(通行不可)　移動時間　1→3および1→4および2→3で1、0→*および*→0で1、その他で10)、初期解を0→1→2→0および0→3→4→0とした場合に
通行可能な最適解(0→1→3→0および0→2→4→0)となることを確認(配送時間枠を守ろうとする場合でも距離テーブルで通行不可なら採用しない)

5. 車両数 : 1、配送先数 : 3(移動距離　3→1で10、2→1で100　移動時間　1→3で-1(通行不可))、初期解を0→1→2→3→0とした場合に
通行可能な最適解(0→2→3→1→0)となることを確認(1→3が配送不可でも3→1は配送することを確認)

(*)
dtable:
[[   0,1000,1000,1000,1000,1000,1000],
 [1000,   0,1000,1000,1000,1000,  10],
 [1000,1000,   0,1000,1000,1000,1000],
 [1000,1000,  10,   0,1000,1000,1000],
 [1000,1000,1000,1000,   0,1000,1000],
 [1000,1000,1000,1000,  10,   0,1000],
 [1000,1000,1000,1000,1000,1000,   0]]

ttable
[[   0,   1,  -1,   1,  -1,   1,  -1],
 [  -1,   0,   1,  -1,  -1,  -1,   1],
 [   1,  -1,   0,  -1,  -1,  -1,  -1],
 [  -1,  -1,   1,   0,   1,  -1,  -1],
 [   1,  -1,  -1,  -1,   0,  -1,  -1],
 [  -1,  -1,  -1,  -1,   1,   0,   1],
 [   1,  -1,  -1,  -1,  -1,  -1,   0]]


