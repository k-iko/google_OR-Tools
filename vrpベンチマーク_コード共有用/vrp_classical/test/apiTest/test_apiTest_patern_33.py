# -*- coding: utf-8 -*-
# !/usr/bin/env python3

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
#
# APIテスト環境
#

import sys
import os
import pprint

import json
import traceback
import random
import time
import datetime
import logging
from io import StringIO
import re
import numpy as np
import copy
import pytest
import test_apiTest_driver as driver

#-----------------------------------------------------------------
# テスト33(ltime, utime指定全般)
#-----------------------------------------------------------------
# 指定のないものは距離は1000、時間は1、電力は1で固定、電力容量は10、初期電力量は10、電力マージンは1、充電レートは1e12で固定、荷作業時間は0、配送時間枠は2000/1/1 9:00:00～2000/1/1 17:00:00で固定
# *但し拠点と最終訪問先の配送時間枠は1000/1/1 0:00:00～3000/1/1 0:00:00

test_args=[
    # ■異常系
    # 21. 車両数 : 1、配送先数 : 1、ltime=2、utime=1とした場合に
    # "Usage:ltime must be smaller than utime"のエラーメッセージを出力して終了することを確認
    ('33_1_21', '33_1_21_request.json','2x2_cost.json', True),

    # ■正常系
    # 1. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で2、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=1、utime=2とした場合に
    # 初期解のままとなることを確認(ltime<=現状解<=utime、utime<改善解)
    ('33_1_1', '33_1_1_request.json','5x5_cost_33_1_1.json', True),

    # 2. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で2、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=1、utime=3とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(ltime<=現状解<改善解<=utime)
    ('33_1_2', '33_1_2_request.json','5x5_cost_33_1_2.json', True),

    # 3. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=2、utime=3とした場合に
    # 初期解のままとなることを確認(ltime<=現状解<=utime、改善解<ltime)
    ('33_1_3', '33_1_3_request.json','5x5_cost_33_1_3.json', True),

    # 4. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=1、utime=3とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(ltime<=改善解<現状解<=utime)
    ('33_1_4', '33_1_4_request.json','5x5_cost_33_1_4.json', True),

    # 5. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=1、utime=3とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(ltime<=現状解<=utime、改善解=現状解)
    ('33_1_5', '33_1_5_request.json','5x5_cost_33_1_5.json', True),

    # 6. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=3、utime=4とした場合に
    # 初期解のままとなることを確認(現状解<ltime、改善解<現状解)
    ('33_1_6', '33_1_6_request.json','5x5_cost_33_1_6.json', True),

    # 7. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=3、utime=4とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(現状解<ltime、改善解=現状解<=utime)
    ('33_1_7', '33_1_7_request.json','5x5_cost_33_1_7.json', True),

    # 8. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で1.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=3、utime=4とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(現状解<ltime、現状解<改善解<=utime)
    ('33_1_8', '33_1_8_request.json','5x5_cost_33_1_8.json', True),

    # 9. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で4、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=3、utime=4とした場合に
    # 初期解のままとなることを確認(現状解<ltime、現状解<改善解、utime<改善解)
    ('33_1_9', '33_1_9_request.json','5x5_cost_33_1_9.json', True),

    # 10. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で2、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=0.5、utime=1とした場合に
    # 初期解のままとなることを確認(utime<現状解、現状解<改善解)
    ('33_1_10', '33_1_10_request.json','5x5_cost_33_1_10.json', True),

    # 11. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=0.5、utime=1とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(utime<現状解、ltime<=改善解=現状解)
    ('33_1_11', '33_1_11_request.json','5x5_cost_33_1_11.json', True),

    # 12. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=0.5、utime=1とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(utime<現状解、ltime<=改善解<現状解)
    ('33_1_12', '33_1_12_request.json','5x5_cost_33_1_12.json', True),

    # 13. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.25、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=1.5、utime=1.75とした場合に
    # 初期解のままとなることを確認(utime<現状解、改善解<現状解、改善解<ltime)
    ('33_1_13', '33_1_13_request.json','5x5_cost_33_1_13.json', True),

    # 14. 車両数 : 2、配送先数 : 4(移動距離 1→3で100、移動時間 1→3で0.5、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2)、初期解 0→1→2→0および0→3→4→0、ltime=2、utime=3、巡回モードとした場合に
    # 0→1→3→0および0→2→4→0となることを確認(ltime<=改善解<現状解<=utime、巡回モード)
    ('33_1_14', '33_1_14_request.json','5x5_cost_33_1_14.json', True),

    # 15. 車両数 : 2、配送先数 : 4(移動距離 2→4で100、移動時間 2→4で2、1番目の配送先に2台目の車両は立寄不可、1台目の訪問数上限は2、車両営業時間枠 2000/1/1 9:00:00～2000/1/1 17:00:00、2000/1/1 11:00:00～2000/1/1 17:00:00)、初期解 0→1→2→0および0→3→4→0、ltime=1、utime=3とした場合に
    # 0→1→3→0および0→2→4→0となることを確認(ltime<=現状解<改善解<=utime、車両営業時間枠)
    ('33_1_15', '33_1_15_request.json','5x5_cost_33_1_15.json', True),

    # 16. 車両数 : 3、配送先数 : 3(opskill 1.0、1.0、1.0、drskill 0.8、0.2、1.0、初期解以外の車両は立寄不可、
    # 移動時間 0→1で3、0→2で1、0→3で2)、初期解 0→1→0および0→2→0および0→3→0、ltime=0.2、utime=2.5とした場合に
    # drskill=1.0のドライバーが2台目、drskill=0.8のドライバーが1台目、drskill=0.2のドライバーが3台目となることを確認(スキルシャッフル)
    ('33_1_16', '33_1_16_request.json','4x4_cost_33_1_16.json', True),

    # 17. 車両数 : 1、配送先数 : 2(配送時間枠 2000/1/1 11:00:00～2000/1/1 12:00:00、2000/1/1 12:00:00～2000/1/1 13:00:00、初期解 0→1→2→0)、出発遅延モード、ltime=2.5、utime=3とした場合に
    # 初期解のまま(拠点の出発時刻は2000/1/1/9:30:00)となることを確認(出発遅延)
    ('33_1_17', '33_1_17_request.json','3x3_cost_33_1_17.json', True),

    # 18. 車両数 : 1(初期電力 8)、充電スポット数 : 1、配送先数 : 2(移動時間 e0→1で2、消費電力はすべて3、初期解 0→1→2→0)、evplan=True、ltime=4、utime=6とした場合に
    # 0→e0→1→2→0(e0で5充電)となることを確認(電力解)
    ('33_1_18', '33_1_18_request.json','4x4_cost_33_1_18.json', True),

    # 19. 車両数 : 2、配送先数 : 2(初期解 0→1→0および0→2→0)、ltime=3、utime=4、台数削減モードとした場合に
    # 車両が1台(0→1→2→0)となることを確認(台数削減により違反量が増加しない場合)
    ('33_1_19', '33_1_19_request.json','3x3_cost_33_1_19.json', True),

    # 20. 車両数 : 2、配送先数 : 2(初期解 0→1→0および0→2→0)、ltime=0.5、utime=1、台数削減モードとした場合に
    # 初期解のままとなることを確認(違反量が増加する場合は台数削減しない)
    ('33_1_20', '33_1_20_request.json','3x3_cost_33_1_20.json', True),

]
